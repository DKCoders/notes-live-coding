swagger: "2.0"
info:
  version: "0.0.1"
  title: Notes and Labels App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /notes:
    x-swagger-router-controller: notes
    get:
      operationId: notesGet
      description: Get all notes
      parameters:
        - name: populate
          in: query
          type: boolean
          default: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NotesResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: notesPost
      description: Create a note
      parameters:
        - name: note
          in: body
          description: Note information
          required: true
          schema:
            $ref: "#/definitions/NotePost"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NoteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /notes/{noteId}:
    x-swagger-router-controller: notes
    get:
      operationId: notesGetById
      description: Return a note by id
      parameters:
        - name: noteId
          in: path
          description: Id of the note
          required: true
          type: string
        - name: populate
          in: query
          type: boolean
          default: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NoteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: notesPut
      description: Update a note
      parameters:
        - name: noteId
          in: path
          description: Id of the note
          required: true
          type: string
        - name: note
          in: body
          description: Note information
          required: true
          schema:
            $ref: "#/definitions/NotePost"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NoteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      operationId: notesPatch
      description: Update partially a note
      parameters:
        - name: noteId
          in: path
          description: Id of the note
          required: true
          type: string
        - name: note
          in: body
          description: Note information
          required: true
          schema:
            $ref: "#/definitions/NotePatch"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NoteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: notesDelete
      description: Delete a note
      parameters:
        - name: noteId
          in: path
          description: Id of the note
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/DeleteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /labels:
    x-swagger-router-controller: labels
    get:
      operationId: labelsGet
      description: Get all labels
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LabelsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: labelsPost
      description: Create a label
      parameters:
        - name: label
          in: body
          description: Label information
          required: true
          schema:
            $ref: "#/definitions/Label"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LabelResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /labels/{labelId}:
    x-swagger-router-controller: labels
    get:
      operationId: labelsGetById
      description: Return a label by id
      parameters:
        - name: labelId
          in: path
          description: Id of the label
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LabelResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: labelsPut
      description: Update a label
      parameters:
        - name: labelId
          in: path
          description: Id of the label
          required: true
          type: string
        - name: label
          in: body
          description: Label information
          required: true
          schema:
            $ref: "#/definitions/Label"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LabelResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      operationId: labelsPatch
      description: Update partially a label
      parameters:
        - name: labelId
          in: path
          description: Id of the label
          required: true
          type: string
        - name: label
          in: body
          description: Label information
          required: true
          schema:
            $ref: "#/definitions/Label"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LabelResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: labelsDelete
      description: Delete a label
      parameters:
        - name: labelId
          in: path
          description: Id of the label
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/DeleteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Note:
    properties:
      _id:
        type: string
      title:
        type: string
      content:
        type: string
      labels:
        type: array
        items:
          type: string
  NotePost:
    required:
      - title
      - content
    properties:
      title:
        type: string
      content:
        type: string
      labels:
        type: array
        items:
          type: string
  NotePatch:
    properties:
      title:
        type: string
      content:
        type: string
      labels:
        type: array
        items:
          type: string
  NoteResponse:
    properties:
      data:
        $ref: "#/definitions/Note"
  NotesResponse:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Note"
  Label:
    required:
      - label
    properties:
      _id:
        type: string
      label:
        type: string
  LabelResponse:
    properties:
      data:
        $ref: "#/definitions/Label"
  LabelsResponse:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Label"
  DeleteResponse:
    properties:
      data:
        type: boolean
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
